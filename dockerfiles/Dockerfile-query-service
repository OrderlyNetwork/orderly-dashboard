# syntax=docker/dockerfile-upstream:experimental

FROM ubuntu:22.04 as build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

RUN apt update && apt install -y git cmake g++ pkg-config libssl-dev curl libpq-dev && rm -rf /var/lib/apt/lists/*

# set HOME env variable of root user
ENV HOME=/root
WORKDIR ${HOME}/orderly-dashboard
ADD . .

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path
ENV PATH=${HOME}/.cargo/bin:${PATH}

RUN echo "[net]\ngit-fetch-with-cli = true" > ${HOME}/.cargo/config

ENV RUSTFLAGS="-C target-cpu=x86-64"
ENV PORTABLE=ON

RUN cargo test --release -p orderly-dashboard-query-service
RUN cargo build --release -p orderly-dashboard-query-service

FROM ubuntu:22.04 as execution
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

RUN apt update && apt install -y libssl-dev && rm -rf /var/lib/apt/lists/*

COPY --from=build /root/orderly-dashboard/target/release/orderly-dashboard-query-service /usr/local/bin/orderly-dashboard-query-service

ENV HOME=/home/orderly
WORKDIR ${HOME}

RUN echo '#!/usr/bin/env bash \n'\
    'set -euo pipefail \n'\
    'RUST_BACKTRACE=1 orderly-dashboard-query-service -c config.json ${1+"${@}"} \n' > ./entrypoint.sh

RUN chmod 755 ./entrypoint.sh

EXPOSE 8020

ENTRYPOINT [ "./entrypoint.sh" ]
